name: Build & Release

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

permissions:
  id-token: write
  contents: write
  checks: write
  packages: write

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: 3.12
          cache-dependency-glob: "pyproject.toml"

      - run: uv build

      - name: Publish build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: "./dist"

  publish-dockerhub:
    name: Publish Docker image to Docker Hub
    needs: [build-release]
    environment: "prod"
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/checkout@v4
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # https://hub.docker.com/r/managedfiletransfer/prefect-managedfiletransfer
          images: |
            managedfiletransfer/prefect-managedfiletransfer
          # ghcr.io/ImperialCollegeLondon/prefect-managedfiletransfer
          
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish-release:
    name: Publish release to PyPI
    needs: [build-release]
    environment: "prod"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: built-package
          path: "./dist"

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true

  build-and-publish-docs:
    name: Build and publish docs
    needs: [build-release, publish-release]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: 3.12
          cache-dependency-glob: "pyproject.toml"

      - run: >
               uv run mkdocs build

      - name: Publish docs
        uses: JamesIves/github-pages-deploy-action@v4.7.3
        with:
          branch: docs
          folder: site
